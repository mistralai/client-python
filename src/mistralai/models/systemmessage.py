"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .referencechunk import ReferenceChunk, ReferenceChunkTypedDict
from .textchunk import TextChunk, TextChunkTypedDict
from .thinkchunk import ThinkChunk, ThinkChunkTypedDict
from mistralai.types import BaseModel
from typing import List, Literal, Optional, Union
from typing_extensions import NotRequired, TypeAliasType, TypedDict


TwoTypedDict = TypeAliasType(
    "TwoTypedDict",
    Union[TextChunkTypedDict, ReferenceChunkTypedDict, ThinkChunkTypedDict],
)


Two = TypeAliasType("Two", Union[TextChunk, ReferenceChunk, ThinkChunk])


SystemMessageContentTypedDict = TypeAliasType(
    "SystemMessageContentTypedDict", Union[str, List[TwoTypedDict]]
)


SystemMessageContent = TypeAliasType("SystemMessageContent", Union[str, List[Two]])


Role = Literal["system"]


class SystemMessageTypedDict(TypedDict):
    content: SystemMessageContentTypedDict
    role: NotRequired[Role]


class SystemMessage(BaseModel):
    content: SystemMessageContent

    role: Optional[Role] = "system"
